C51 COMPILER V9.01   PWM                                                                   07/23/2013 16:33:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\out\PWM.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE PWM.c BROWSE DEBUG OBJECTEXTEND PRINT(.\listing\PWM.lst
                    -) OBJECT(.\out\PWM.obj)

line level    source

   1          
   2          #include<N79E81x.h>
   3          #include <intrins.h>
   4          #include"PWM.h"
   5          //#include"UART.h"
   6          
   7          
   8          
   9          
  10          
  11          
  12          UINT16 PWM_shadow;
  13          
  14          //--------------------------------------------------------------------------------------------------------
             ----
  15          void Init_PWM(void)
  16          {    
  17   1          PWMCON0 = 0xC0;                     // Enable PWM and select auto reload mode    
  18   1      
  19   1          PWM_shadow = PWMP;
  20   1          PWMPH = HIBYTE(PWM_shadow);         // PWM Period
  21   1          PWMPL = LOBYTE(PWM_shadow);                               
  22   1      }
  23          //void PWM_Pin_Recover_IO(void)
  24          //{
  25          //    PWMCON0 = 0x00;// 
  26          //    PWMCON1 = 0x00;// 
  27          //    PWMCON2 = 0x00;// 
  28          //    PWMPH   = 0x00;// 
  29          //    PWMPL   = 0x00;// 
  30          //    PWM0H   = 0x00;// 
  31          //    PWM0L   = 0x01;// 
  32          //    PWM1H   = 0x00;// 
  33          //    PWM1L   = 0x01;// 
  34          //    PWM2H   = 0x00;// 
  35          //    PWM2L   = 0x01;// 
  36          //    PWM3H   = 0x00;// 
  37          //    PWM3L   = 0x01;// PWMP < PWMn Duty, PWM Pin Output High(no-active)
  38          //    PWMCON0 = 0xD0;// PWM Run
  39          //    _nop_ ();      // NOP
  40          //    PWMCON0 = 0x2F;// PWM Stop
  41          //}
  42          void PWM_Channel(E_PWMCNL_SEL Channel)   //选择PWM输出通道
  43          {
  44   1          switch(Channel)
  45   1          {
  46   2              case E_CHANNEL0:
  47   2                  PWM_shadow=PWM0_Duty;
  48   2                  PWM0H = HIBYTE(PWM_shadow);// PWM0 Duty (P0.1)
  49   2                  PWM0L = LOBYTE(PWM_shadow);
  50   2                  break;
  51   2              case E_CHANNEL1:
  52   2                  PWM_shadow=PWM1_Duty;
  53   2                  PWM1H = HIBYTE(PWM_shadow);// PWM1 Duty (P1.6)
C51 COMPILER V9.01   PWM                                                                   07/23/2013 16:33:42 PAGE 2   

  54   2                  PWM1L = LOBYTE(PWM_shadow);
  55   2                  break;
  56   2              case E_CHANNEL2:
  57   2                  PWM_shadow=PWM2_Duty;
  58   2                  PWM2H = HIBYTE(PWM_shadow);// PWM2 Duty (P1.7)
  59   2                  PWM2L = LOBYTE(PWM_shadow);
  60   2                  break;
  61   2              case E_CHANNEL3:
  62   2                  PWM_shadow=PWM3_Duty;
  63   2                  PWM3H = HIBYTE(PWM_shadow);// PWM3 Duty (P0.0)
  64   2                  PWM3L = LOBYTE(PWM_shadow);
  65   2                  break; 
  66   2          }
  67   1      }
  68          //void Enabled_Brake_Function(void)
  69          //{
  70          //    PWMCON1 = 0x30;                    // PWM is running. PWM will be stopped when P0.2 is low level.
  71          //}
  72          
  73          void myPwm()
  74          {
  75   1              PWM_Channel(E_CHANNEL0);           // Select PWM channel.
  76   1          Init_PWM();                        // Enable PWM function and set PWM period.  
  77   1          //Enabled_Brake_Function();          // Enable Brake funciton.
  78   1      }
  79          
  80          
  81          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    100    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
